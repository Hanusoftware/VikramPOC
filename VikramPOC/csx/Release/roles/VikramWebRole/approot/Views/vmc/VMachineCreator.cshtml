@model VikramWebRole.Models.VirtualModel
@{
    ViewBag.Title = "VMachineCreator";
}

<h2>VMachineCreator</h2>
@using (Html.BeginForm("CreateVM", "vmc", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SubscriptionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(x => x.selected, Model.lstCategory)*@
                @Html.EditorFor(model => model.SubscriptionId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StorageAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StorageAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StorageAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VMName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VMName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <table class="table">
            <tr>
                <th>
                    VM Name
                </th>

                <th>
                    Operating System
                </th>
                <th>
                    Connect
                </th>
                <th>
                    Restart
                </th>
                <th>
                    Shut Down
                </th>
                <th>
                    Delete
                </th>

            </tr>
            @if (Model.vmlist != null)
            {
                foreach (var item in Model.vmlist)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.VMName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.OperatingSystem)
                        </td>



                        <td>
                            @Html.ActionLink("Connect", "ConnectVM", new { vname = item.VMName })
                        </td>
                        <td>
                            @Html.ActionLink("Restart", "RestartVM", new { vname = item.VMName })
                        </td>
                        <td>
                            @Html.ActionLink("Shut Down", "ShutdownVM", new { vname = item.VMName })
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "DeleteVM", new { vname = item.VMName })
                        </td>
                    </tr>
                }
            }

        </table>
    </div>
}


